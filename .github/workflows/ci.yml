name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker
      uses: docker/setup-docker@v1
    - name: Run docker compose
      run: docker-compose up -d
    - run: ./scripts/wait-for-file ../output/contracts.json 120
    - run: |
        echo "export ADMIN_PHRASE=$(cat ./output/contract.json | jq '.admin_phrase')" >> .envrc
        echo "export USER1_PHRASE=$(cat ./output/contract.json | jq '.user1_phrase')" >> .envrc
        echo "export USER2_PHRASE=$(cat ./output/contract.json | jq '.user2_phrase')" >> .envrc
        echo "export USER3_PHRASE=$(cat ./output/contract.json | jq '.user3_phrase')" >> .envrc
        echo "export SUI_NETWORK=http://127.0.0.1:9000" >> .envrc
        echo "export PACKAGE_ID=$(cat ./output/contract.json | jq '.package_id')" >> .envrc
        echo "export ADMIN_CAP_ID=$(cat ./output/contract.json | jq '.admin_cap_id')" >> .envrc
        echo "export PUBLISHER_ID=$(cat ./output/contract.json | jq '.publisher_id')" >> .envrc
                
    - name: Install npm dependencies
      run: npm ci && cd setup && npm ci

    - name: Run tests
      run: direnv exec . npm test