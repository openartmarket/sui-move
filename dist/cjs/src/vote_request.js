"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createVoteRequest = void 0;
const sui_js_1 = require("@mysten/sui.js");
const helpers_1 = require("./helpers");
async function createVoteRequest({ artworkId, request, adminCapId, packageId, signerPhrase, }) {
    const { signer } = (0, helpers_1.getSigner)(signerPhrase);
    const tx = new sui_js_1.TransactionBlock();
    tx.moveCall({
        target: `${packageId}::dao::create_vote_request`,
        arguments: [tx.object(adminCapId), tx.pure(artworkId), tx.pure(request)],
    });
    const txRes = await signer.signAndExecuteTransactionBlock({
        transactionBlock: tx,
        requestType: "WaitForLocalExecution",
        options: {
            showObjectChanges: true,
            showEffects: true,
        },
    });
    (0, helpers_1.handleTransactionResponse)(txRes);
    const vote_request_id = (0, sui_js_1.getCreatedObjects)(txRes)?.[0].reference.objectId;
    return vote_request_id;
}
exports.createVoteRequest = createVoteRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm90ZV9yZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3ZvdGVfcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBcUU7QUFFckUsdUNBQWlFO0FBRzFELEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxFQUN0QyxTQUFTLEVBQ1QsT0FBTyxFQUNQLFVBQVUsRUFDVixTQUFTLEVBQ1QsWUFBWSxHQUNNO0lBQ2xCLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFBLG1CQUFTLEVBQUMsWUFBWSxDQUFDLENBQUM7SUFDM0MsTUFBTSxFQUFFLEdBQUcsSUFBSSx5QkFBZ0IsRUFBRSxDQUFDO0lBRWxDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDVixNQUFNLEVBQUUsR0FBRyxTQUFTLDRCQUE0QjtRQUNoRCxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUN6RSxDQUFDLENBQUM7SUFDSCxNQUFNLEtBQUssR0FBRyxNQUFNLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQztRQUN4RCxnQkFBZ0IsRUFBRSxFQUFFO1FBQ3BCLFdBQVcsRUFBRSx1QkFBdUI7UUFDcEMsT0FBTyxFQUFFO1lBQ1AsaUJBQWlCLEVBQUUsSUFBSTtZQUN2QixXQUFXLEVBQUUsSUFBSTtTQUNsQjtLQUNGLENBQUMsQ0FBQztJQUNILElBQUEsbUNBQXlCLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsTUFBTSxlQUFlLEdBQUcsSUFBQSwwQkFBaUIsRUFBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7SUFDekUsT0FBTyxlQUFlLENBQUM7QUFDekIsQ0FBQztBQXpCRCw4Q0F5QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDcmVhdGVkT2JqZWN0cywgVHJhbnNhY3Rpb25CbG9jayB9IGZyb20gXCJAbXlzdGVuL3N1aS5qc1wiO1xuXG5pbXBvcnQgeyBnZXRTaWduZXIsIGhhbmRsZVRyYW5zYWN0aW9uUmVzcG9uc2UgfSBmcm9tIFwiLi9oZWxwZXJzXCI7XG5pbXBvcnQgeyBWb3RlUmVxdWVzdFBhcmFtcyB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVWb3RlUmVxdWVzdCh7XG4gIGFydHdvcmtJZCxcbiAgcmVxdWVzdCxcbiAgYWRtaW5DYXBJZCxcbiAgcGFja2FnZUlkLFxuICBzaWduZXJQaHJhc2UsXG59OiBWb3RlUmVxdWVzdFBhcmFtcykge1xuICBjb25zdCB7IHNpZ25lciB9ID0gZ2V0U2lnbmVyKHNpZ25lclBocmFzZSk7XG4gIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uQmxvY2soKTtcblxuICB0eC5tb3ZlQ2FsbCh7XG4gICAgdGFyZ2V0OiBgJHtwYWNrYWdlSWR9OjpkYW86OmNyZWF0ZV92b3RlX3JlcXVlc3RgLFxuICAgIGFyZ3VtZW50czogW3R4Lm9iamVjdChhZG1pbkNhcElkKSwgdHgucHVyZShhcnR3b3JrSWQpLCB0eC5wdXJlKHJlcXVlc3QpXSxcbiAgfSk7XG4gIGNvbnN0IHR4UmVzID0gYXdhaXQgc2lnbmVyLnNpZ25BbmRFeGVjdXRlVHJhbnNhY3Rpb25CbG9jayh7XG4gICAgdHJhbnNhY3Rpb25CbG9jazogdHgsXG4gICAgcmVxdWVzdFR5cGU6IFwiV2FpdEZvckxvY2FsRXhlY3V0aW9uXCIsXG4gICAgb3B0aW9uczoge1xuICAgICAgc2hvd09iamVjdENoYW5nZXM6IHRydWUsXG4gICAgICBzaG93RWZmZWN0czogdHJ1ZSxcbiAgICB9LFxuICB9KTtcbiAgaGFuZGxlVHJhbnNhY3Rpb25SZXNwb25zZSh0eFJlcyk7XG4gIGNvbnN0IHZvdGVfcmVxdWVzdF9pZCA9IGdldENyZWF0ZWRPYmplY3RzKHR4UmVzKT8uWzBdLnJlZmVyZW5jZS5vYmplY3RJZDtcbiAgcmV0dXJuIHZvdGVfcmVxdWVzdF9pZDtcbn1cbiJdfQ==