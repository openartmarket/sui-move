"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const artwork_1 = require("../src/artwork");
const artwork_shard_1 = require("../src/artwork_shard");
const config_1 = require("../src/config");
const end_request_voting_1 = require("../src/end_request_voting");
const split_artwork_shard_1 = require("../src/split_artwork_shard");
const vote_1 = require("../src/vote");
const vote_request_1 = require("../src/vote_request");
const test_helpers_1 = require("../test/test-helpers");
// WIP for start to end scenario
async function startToEndScenario() {
    // Admin mints an artwork
    const artworkId = await (0, artwork_1.mintArtwork)({
        signerPhrase: test_helpers_1.ADMIN_PHRASE,
        packageId: config_1.PACKAGE_ID,
        adminCapId: test_helpers_1.ADMIN_CAP_ID,
        totalSupply: 1000,
        sharePrice: 10,
        multiplier: 2,
        name: "Mona Lisa",
        artist: "Leonardo da Vinci",
        creationDate: "1685548680595",
        description: "Choconta painting",
        currency: "NOK",
        image: "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/800px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg"
    });
    // Admin creates an artwork shard and sends to user
    const { artworkShardId } = await (0, artwork_shard_1.mintArtworkShard)({ artworkId, signerPhrase: test_helpers_1.ADMIN_PHRASE, receiverAddress: test_helpers_1.USER1_ADDRESS, shares: 10, packageId: config_1.PACKAGE_ID, adminCapId: test_helpers_1.ADMIN_CAP_ID, });
    // Split artwork shard
    await (0, split_artwork_shard_1.splitArtworkShard)({ artworkShardId, signerPhrase: test_helpers_1.USER1_PHRASE, shares: 2, packageId: config_1.PACKAGE_ID });
    // Admin reates a vote request for the artwork
    const voteRequest = await (0, vote_request_1.createVoteRequest)({ artworkId, request: "Request to sell artwork to Bob", adminCapId: test_helpers_1.ADMIN_CAP_ID, packageId: config_1.PACKAGE_ID, signerPhrase: test_helpers_1.ADMIN_PHRASE });
    if (!voteRequest)
        throw new Error("Could not create vote request");
    // User votes for vote request
    await (0, vote_1.vote)({ artworkId, voteRequest, voterAccount: test_helpers_1.USER1_PHRASE, choice: true });
    // End voting for vote request
    await (0, end_request_voting_1.endRequestVoting)({ voteRequest, signerPhrase: test_helpers_1.ADMIN_PHRASE, adminCapId: test_helpers_1.ADMIN_CAP_ID, packageId: config_1.PACKAGE_ID });
}
startToEndScenario();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnRfdG9fZW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdGVzdF9zY2VuYXJpb3Mvc3RhcnRfdG9fZW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNENBQTZDO0FBQzdDLHdEQUF3RDtBQUN4RCwwQ0FBMkM7QUFDM0Msa0VBQTZEO0FBQzdELG9FQUErRDtBQUMvRCxzQ0FBbUM7QUFDbkMsc0RBQXdEO0FBQ3hELHVEQUFnRztBQUVoRyxnQ0FBZ0M7QUFDaEMsS0FBSyxVQUFVLGtCQUFrQjtJQUMvQix5QkFBeUI7SUFDekIsTUFBTSxTQUFTLEdBQUcsTUFBTSxJQUFBLHFCQUFXLEVBQUM7UUFDbEMsWUFBWSxFQUFFLDJCQUFZO1FBQzFCLFNBQVMsRUFBRSxtQkFBVTtRQUNyQixVQUFVLEVBQUUsMkJBQVk7UUFDeEIsV0FBVyxFQUFFLElBQUk7UUFDakIsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsQ0FBQztRQUNiLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxtQkFBbUI7UUFDM0IsWUFBWSxFQUFFLGVBQWU7UUFDN0IsV0FBVyxFQUFFLG1CQUFtQjtRQUNoQyxRQUFRLEVBQUUsS0FBSztRQUNmLEtBQUssRUFBRSw2TEFBNkw7S0FDck0sQ0FBQyxDQUFDO0lBRUgsbURBQW1EO0lBQ25ELE1BQU0sRUFBRSxjQUFjLEVBQUUsR0FBRyxNQUFNLElBQUEsZ0NBQWdCLEVBQUMsRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLDJCQUFZLEVBQUUsZUFBZSxFQUFFLDRCQUFhLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsbUJBQVUsRUFBRSxVQUFVLEVBQUUsMkJBQVksR0FBRSxDQUFDLENBQUM7SUFFekwsc0JBQXNCO0lBQ3RCLE1BQU0sSUFBQSx1Q0FBaUIsRUFBQyxFQUFDLGNBQWMsRUFBRSxZQUFZLEVBQUUsMkJBQVksRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxtQkFBVSxFQUFDLENBQUMsQ0FBQztJQUV4Ryw4Q0FBOEM7SUFDOUMsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFBLGdDQUFpQixFQUN6QyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsVUFBVSxFQUFFLDJCQUFZLEVBQUUsU0FBUyxFQUFFLG1CQUFVLEVBQUUsWUFBWSxFQUFFLDJCQUFZLEVBQUUsQ0FBRyxDQUFDO0lBQzNJLElBQUksQ0FBQyxXQUFXO1FBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0lBRW5FLDhCQUE4QjtJQUM5QixNQUFNLElBQUEsV0FBSSxFQUFDLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsMkJBQVksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUVqRiw4QkFBOEI7SUFDOUIsTUFBTSxJQUFBLHFDQUFnQixFQUFDLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSwyQkFBWSxFQUFFLFVBQVUsRUFBRSwyQkFBWSxFQUFFLFNBQVMsRUFBRSxtQkFBVSxFQUFFLENBQUMsQ0FBQztBQUN2SCxDQUFDO0FBRUQsa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1pbnRBcnR3b3JrIH0gZnJvbSBcIi4uL3NyYy9hcnR3b3JrXCI7XG5pbXBvcnQgeyBtaW50QXJ0d29ya1NoYXJkIH0gZnJvbSBcIi4uL3NyYy9hcnR3b3JrX3NoYXJkXCI7XG5pbXBvcnQgeyBQQUNLQUdFX0lEIH0gZnJvbSBcIi4uL3NyYy9jb25maWdcIjtcbmltcG9ydCB7IGVuZFJlcXVlc3RWb3RpbmcgfSBmcm9tIFwiLi4vc3JjL2VuZF9yZXF1ZXN0X3ZvdGluZ1wiO1xuaW1wb3J0IHsgc3BsaXRBcnR3b3JrU2hhcmQgfSBmcm9tIFwiLi4vc3JjL3NwbGl0X2FydHdvcmtfc2hhcmRcIjtcbmltcG9ydCB7IHZvdGUgfSBmcm9tIFwiLi4vc3JjL3ZvdGVcIjtcbmltcG9ydCB7IGNyZWF0ZVZvdGVSZXF1ZXN0IH0gZnJvbSBcIi4uL3NyYy92b3RlX3JlcXVlc3RcIjtcbmltcG9ydCB7IEFETUlOX0NBUF9JRCwgQURNSU5fUEhSQVNFLCBVU0VSMV9BRERSRVNTLCBVU0VSMV9QSFJBU0UgIH0gZnJvbSBcIi4uL3Rlc3QvdGVzdC1oZWxwZXJzXCI7XG5cbi8vIFdJUCBmb3Igc3RhcnQgdG8gZW5kIHNjZW5hcmlvXG5hc3luYyBmdW5jdGlvbiBzdGFydFRvRW5kU2NlbmFyaW8oKSB7XG4gIC8vIEFkbWluIG1pbnRzIGFuIGFydHdvcmtcbiAgY29uc3QgYXJ0d29ya0lkID0gYXdhaXQgbWludEFydHdvcmsoe1xuICAgIHNpZ25lclBocmFzZTogQURNSU5fUEhSQVNFLFxuICAgIHBhY2thZ2VJZDogUEFDS0FHRV9JRCxcbiAgICBhZG1pbkNhcElkOiBBRE1JTl9DQVBfSUQsXG4gICAgdG90YWxTdXBwbHk6IDEwMDAsXG4gICAgc2hhcmVQcmljZTogMTAsXG4gICAgbXVsdGlwbGllcjogMixcbiAgICBuYW1lOiBcIk1vbmEgTGlzYVwiLFxuICAgIGFydGlzdDogXCJMZW9uYXJkbyBkYSBWaW5jaVwiLFxuICAgIGNyZWF0aW9uRGF0ZTogXCIxNjg1NTQ4NjgwNTk1XCIsXG4gICAgZGVzY3JpcHRpb246IFwiQ2hvY29udGEgcGFpbnRpbmdcIixcbiAgICBjdXJyZW5jeTogXCJOT0tcIixcbiAgICBpbWFnZTogXCJodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iL2UvZWMvTW9uYV9MaXNhJTJDX2J5X0xlb25hcmRvX2RhX1ZpbmNpJTJDX2Zyb21fQzJSTUZfcmV0b3VjaGVkLmpwZy84MDBweC1Nb25hX0xpc2ElMkNfYnlfTGVvbmFyZG9fZGFfVmluY2klMkNfZnJvbV9DMlJNRl9yZXRvdWNoZWQuanBnXCJcbiAgfSk7XG5cbiAgLy8gQWRtaW4gY3JlYXRlcyBhbiBhcnR3b3JrIHNoYXJkIGFuZCBzZW5kcyB0byB1c2VyXG4gIGNvbnN0IHsgYXJ0d29ya1NoYXJkSWQgfSA9IGF3YWl0IG1pbnRBcnR3b3JrU2hhcmQoe2FydHdvcmtJZCwgc2lnbmVyUGhyYXNlOiBBRE1JTl9QSFJBU0UsIHJlY2VpdmVyQWRkcmVzczogVVNFUjFfQUREUkVTUywgc2hhcmVzOiAxMCwgcGFja2FnZUlkOiBQQUNLQUdFX0lELCBhZG1pbkNhcElkOiBBRE1JTl9DQVBfSUQsfSk7XG5cbiAgLy8gU3BsaXQgYXJ0d29yayBzaGFyZFxuICBhd2FpdCBzcGxpdEFydHdvcmtTaGFyZCh7YXJ0d29ya1NoYXJkSWQsIHNpZ25lclBocmFzZTogVVNFUjFfUEhSQVNFLCBzaGFyZXM6IDIsIHBhY2thZ2VJZDogUEFDS0FHRV9JRH0pO1xuICBcbiAgLy8gQWRtaW4gcmVhdGVzIGEgdm90ZSByZXF1ZXN0IGZvciB0aGUgYXJ0d29ya1xuICBjb25zdCB2b3RlUmVxdWVzdCA9IGF3YWl0IGNyZWF0ZVZvdGVSZXF1ZXN0KFxuICAgIHsgYXJ0d29ya0lkLCByZXF1ZXN0OiBcIlJlcXVlc3QgdG8gc2VsbCBhcnR3b3JrIHRvIEJvYlwiLCBhZG1pbkNhcElkOiBBRE1JTl9DQVBfSUQsIHBhY2thZ2VJZDogUEFDS0FHRV9JRCwgc2lnbmVyUGhyYXNlOiBBRE1JTl9QSFJBU0UgfSAgKTtcbiAgaWYgKCF2b3RlUmVxdWVzdCkgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGNyZWF0ZSB2b3RlIHJlcXVlc3RcIik7XG5cbiAgLy8gVXNlciB2b3RlcyBmb3Igdm90ZSByZXF1ZXN0XG4gIGF3YWl0IHZvdGUoeyBhcnR3b3JrSWQsIHZvdGVSZXF1ZXN0LCB2b3RlckFjY291bnQ6IFVTRVIxX1BIUkFTRSwgY2hvaWNlOiB0cnVlIH0pO1xuXG4gIC8vIEVuZCB2b3RpbmcgZm9yIHZvdGUgcmVxdWVzdFxuICBhd2FpdCBlbmRSZXF1ZXN0Vm90aW5nKHsgdm90ZVJlcXVlc3QsIHNpZ25lclBocmFzZTogQURNSU5fUEhSQVNFLCBhZG1pbkNhcElkOiBBRE1JTl9DQVBfSUQsIHBhY2thZ2VJZDogUEFDS0FHRV9JRCB9KTtcbn1cblxuc3RhcnRUb0VuZFNjZW5hcmlvKCk7XG4iXX0=