import { TransactionBlock } from "@mysten/sui.js";
import { findObjectIdWithOwnerAddress } from "./findObjectIdWithOwnerAddress";
import { getSigner, handleTransactionResponse } from "./helpers";
/**
 * Mints an artwork shard
 * @returns artwork shard id
 */
export async function mintArtworkShard(params) {
    const { artworkId, signerPhrase, receiverAddress, packageId, adminCapId, shares } = params;
    const { signer } = getSigner(signerPhrase);
    const tx = new TransactionBlock();
    tx.moveCall({
        target: `${packageId}::open_art_market::mint_artwork_shard`,
        arguments: [
            tx.object(adminCapId),
            tx.object(artworkId),
            tx.pure(shares),
            tx.pure(receiverAddress),
        ],
    });
    const txRes = await signer.signAndExecuteTransactionBlock({
        transactionBlock: tx,
        requestType: "WaitForLocalExecution",
        options: {
            showObjectChanges: true,
            showEffects: true,
        },
    });
    handleTransactionResponse(txRes);
    const artworkShardId = findObjectIdWithOwnerAddress(txRes, receiverAddress);
    const { digest } = txRes;
    return { artworkShardId, digest, owner: receiverAddress };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJ0d29ya19zaGFyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcnR3b3JrX3NoYXJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWxELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxTQUFTLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHakU7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLEtBQUssVUFBVSxnQkFBZ0IsQ0FDcEMsTUFBOEI7SUFFOUIsTUFBTSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEdBQUcsTUFBTSxDQUFDO0lBQzNGLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7SUFFM0MsTUFBTSxFQUFFLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBRWxDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDVixNQUFNLEVBQUUsR0FBRyxTQUFTLHVDQUF1QztRQUMzRCxTQUFTLEVBQUU7WUFDVCxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztZQUNyQixFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQztZQUNwQixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNmLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO1NBQ3pCO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsTUFBTSxLQUFLLEdBQUcsTUFBTSxNQUFNLENBQUMsOEJBQThCLENBQUM7UUFDeEQsZ0JBQWdCLEVBQUUsRUFBRTtRQUNwQixXQUFXLEVBQUUsdUJBQXVCO1FBQ3BDLE9BQU8sRUFBRTtZQUNQLGlCQUFpQixFQUFFLElBQUk7WUFDdkIsV0FBVyxFQUFFLElBQUk7U0FDbEI7S0FDRixDQUFDLENBQUM7SUFDSCx5QkFBeUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxNQUFNLGNBQWMsR0FBRyw0QkFBNEIsQ0FBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDNUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQztJQUN6QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLENBQUM7QUFDNUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zYWN0aW9uQmxvY2sgfSBmcm9tIFwiQG15c3Rlbi9zdWkuanNcIjtcblxuaW1wb3J0IHsgZmluZE9iamVjdElkV2l0aE93bmVyQWRkcmVzcyB9IGZyb20gXCIuL2ZpbmRPYmplY3RJZFdpdGhPd25lckFkZHJlc3NcIjtcbmltcG9ydCB7IGdldFNpZ25lciwgaGFuZGxlVHJhbnNhY3Rpb25SZXNwb25zZSB9IGZyb20gXCIuL2hlbHBlcnNcIjtcbmltcG9ydCB7IE1pbnRBcnR3b3JrU2hhcmRQYXJhbXMsIE1pbnRBcnR3b3JrU2hhcmRSZXN1bHQgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG4vKipcbiAqIE1pbnRzIGFuIGFydHdvcmsgc2hhcmRcbiAqIEByZXR1cm5zIGFydHdvcmsgc2hhcmQgaWRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pbnRBcnR3b3JrU2hhcmQoXG4gIHBhcmFtczogTWludEFydHdvcmtTaGFyZFBhcmFtc1xuKTogUHJvbWlzZTxNaW50QXJ0d29ya1NoYXJkUmVzdWx0PiB7XG4gIGNvbnN0IHsgYXJ0d29ya0lkLCBzaWduZXJQaHJhc2UsIHJlY2VpdmVyQWRkcmVzcywgcGFja2FnZUlkLCBhZG1pbkNhcElkLCBzaGFyZXMgfSA9IHBhcmFtcztcbiAgY29uc3QgeyBzaWduZXIgfSA9IGdldFNpZ25lcihzaWduZXJQaHJhc2UpO1xuXG4gIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uQmxvY2soKTtcblxuICB0eC5tb3ZlQ2FsbCh7XG4gICAgdGFyZ2V0OiBgJHtwYWNrYWdlSWR9OjpvcGVuX2FydF9tYXJrZXQ6Om1pbnRfYXJ0d29ya19zaGFyZGAsXG4gICAgYXJndW1lbnRzOiBbXG4gICAgICB0eC5vYmplY3QoYWRtaW5DYXBJZCksXG4gICAgICB0eC5vYmplY3QoYXJ0d29ya0lkKSxcbiAgICAgIHR4LnB1cmUoc2hhcmVzKSxcbiAgICAgIHR4LnB1cmUocmVjZWl2ZXJBZGRyZXNzKSxcbiAgICBdLFxuICB9KTtcblxuICBjb25zdCB0eFJlcyA9IGF3YWl0IHNpZ25lci5zaWduQW5kRXhlY3V0ZVRyYW5zYWN0aW9uQmxvY2soe1xuICAgIHRyYW5zYWN0aW9uQmxvY2s6IHR4LFxuICAgIHJlcXVlc3RUeXBlOiBcIldhaXRGb3JMb2NhbEV4ZWN1dGlvblwiLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHNob3dPYmplY3RDaGFuZ2VzOiB0cnVlLFxuICAgICAgc2hvd0VmZmVjdHM6IHRydWUsXG4gICAgfSxcbiAgfSk7XG4gIGhhbmRsZVRyYW5zYWN0aW9uUmVzcG9uc2UodHhSZXMpO1xuICBjb25zdCBhcnR3b3JrU2hhcmRJZCA9IGZpbmRPYmplY3RJZFdpdGhPd25lckFkZHJlc3ModHhSZXMsIHJlY2VpdmVyQWRkcmVzcyk7XG4gIGNvbnN0IHsgZGlnZXN0IH0gPSB0eFJlcztcbiAgcmV0dXJuIHsgYXJ0d29ya1NoYXJkSWQsIGRpZ2VzdCwgb3duZXI6IHJlY2VpdmVyQWRkcmVzcyB9O1xufVxuIl19