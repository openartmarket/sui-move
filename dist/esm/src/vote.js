import { getExecutionStatus, TransactionBlock } from "@mysten/sui.js";
import { PACKAGE_ID } from "./config";
import { getSigner } from "./helpers";
export async function vote({ artwork, voteRequest, voterAccount, choice }) {
    const { signer } = getSigner(voterAccount);
    const tx = new TransactionBlock();
    tx.moveCall({
        target: `${PACKAGE_ID}::dao::vote`,
        arguments: [tx.object(artwork), tx.object(voteRequest), tx.pure(choice)],
    });
    try {
        const txRes = await signer.signAndExecuteTransactionBlock({
            transactionBlock: tx,
            requestType: "WaitForLocalExecution",
            options: {
                showEffects: true,
            },
        });
        return getExecutionStatus(txRes);
    }
    catch (e) {
        // console.error("Could not vote", e);
        throw new Error("Could not vote");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92b3RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXRFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdEMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQVF0QyxNQUFNLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBYztJQUNuRixNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNDLE1BQU0sRUFBRSxHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztJQUVsQyxFQUFFLENBQUMsUUFBUSxDQUFDO1FBQ1YsTUFBTSxFQUFFLEdBQUcsVUFBVSxhQUFhO1FBQ2xDLFNBQVMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ3pFLENBQUMsQ0FBQztJQUVILElBQUk7UUFDRixNQUFNLEtBQUssR0FBRyxNQUFNLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQztZQUN4RCxnQkFBZ0IsRUFBRSxFQUFFO1lBQ3BCLFdBQVcsRUFBRSx1QkFBdUI7WUFDcEMsT0FBTyxFQUFFO2dCQUNQLFdBQVcsRUFBRSxJQUFJO2FBQ2xCO1NBQ0YsQ0FBQyxDQUFDO1FBRUgsT0FBTyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNsQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1Ysc0NBQXNDO1FBQ3RDLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztLQUNuQztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFeGVjdXRpb25TdGF0dXMsIFRyYW5zYWN0aW9uQmxvY2sgfSBmcm9tIFwiQG15c3Rlbi9zdWkuanNcIjtcblxuaW1wb3J0IHsgUEFDS0FHRV9JRCB9IGZyb20gXCIuL2NvbmZpZ1wiO1xuaW1wb3J0IHsgZ2V0U2lnbmVyIH0gZnJvbSBcIi4vaGVscGVyc1wiO1xudHlwZSBWb3RlUGFyYW1zID0geyBcbiAgYXJ0d29yazogc3RyaW5nOyBcbiAgdm90ZVJlcXVlc3Q6IHN0cmluZzsgXG4gIHZvdGVyQWNjb3VudDogc3RyaW5nOyBcbiAgY2hvaWNlOiBib29sZWFuOyBcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZvdGUoeyBhcnR3b3JrLCB2b3RlUmVxdWVzdCwgdm90ZXJBY2NvdW50LCBjaG9pY2UgfTogVm90ZVBhcmFtcykge1xuICBjb25zdCB7IHNpZ25lciB9ID0gZ2V0U2lnbmVyKHZvdGVyQWNjb3VudCk7XG4gIGNvbnN0IHR4ID0gbmV3IFRyYW5zYWN0aW9uQmxvY2soKTtcblxuICB0eC5tb3ZlQ2FsbCh7XG4gICAgdGFyZ2V0OiBgJHtQQUNLQUdFX0lEfTo6ZGFvOjp2b3RlYCxcbiAgICBhcmd1bWVudHM6IFt0eC5vYmplY3QoYXJ0d29yayksIHR4Lm9iamVjdCh2b3RlUmVxdWVzdCksIHR4LnB1cmUoY2hvaWNlKV0sXG4gIH0pO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgdHhSZXMgPSBhd2FpdCBzaWduZXIuc2lnbkFuZEV4ZWN1dGVUcmFuc2FjdGlvbkJsb2NrKHtcbiAgICAgIHRyYW5zYWN0aW9uQmxvY2s6IHR4LFxuICAgICAgcmVxdWVzdFR5cGU6IFwiV2FpdEZvckxvY2FsRXhlY3V0aW9uXCIsXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHNob3dFZmZlY3RzOiB0cnVlLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIHJldHVybiBnZXRFeGVjdXRpb25TdGF0dXModHhSZXMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gY29uc29sZS5lcnJvcihcIkNvdWxkIG5vdCB2b3RlXCIsIGUpO1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCB2b3RlXCIpO1xuICB9XG59XG4iXX0=