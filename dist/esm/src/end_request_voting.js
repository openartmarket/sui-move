import { getExecutionStatus, TransactionBlock } from "@mysten/sui.js";
import { getSigner } from "./helpers";
export async function endRequestVoting({ voteRequest, packageId, signerPhrase, adminCapId }) {
    const { signer } = getSigner(signerPhrase);
    const tx = new TransactionBlock();
    tx.moveCall({
        target: `${packageId}::dao::end_request_voting`,
        arguments: [tx.object(adminCapId), tx.object(voteRequest)],
    });
    try {
        const txRes = await signer.signAndExecuteTransactionBlock({
            transactionBlock: tx,
            requestType: "WaitForLocalExecution",
            options: {
                showEffects: true,
            },
        });
        return getExecutionStatus(txRes);
    }
    catch (e) {
        // console.error("Could not end voting request", e);
        throw new Error("Could not end voting request");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kX3JlcXVlc3Rfdm90aW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2VuZF9yZXF1ZXN0X3ZvdGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV0RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBU3RDLE1BQU0sQ0FBQyxLQUFLLFVBQVUsZ0JBQWdCLENBQUMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQXdCO0lBQy9HLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDM0MsTUFBTSxFQUFFLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0lBRWxDLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDVixNQUFNLEVBQUUsR0FBRyxTQUFTLDJCQUEyQjtRQUMvQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDM0QsQ0FBQyxDQUFDO0lBRUgsSUFBSTtRQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sTUFBTSxDQUFDLDhCQUE4QixDQUFDO1lBQ3hELGdCQUFnQixFQUFFLEVBQUU7WUFDcEIsV0FBVyxFQUFFLHVCQUF1QjtZQUNwQyxPQUFPLEVBQUU7Z0JBQ1AsV0FBVyxFQUFFLElBQUk7YUFDbEI7U0FDRixDQUFDLENBQUM7UUFFSCxPQUFPLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2xDO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixvREFBb0Q7UUFDcEQsTUFBTSxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0tBQ2pEO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEV4ZWN1dGlvblN0YXR1cywgVHJhbnNhY3Rpb25CbG9jayB9IGZyb20gXCJAbXlzdGVuL3N1aS5qc1wiO1xuXG5pbXBvcnQgeyBnZXRTaWduZXIgfSBmcm9tIFwiLi9oZWxwZXJzXCI7XG5cblxudHlwZSBFbmRWb3RlUmVxdWVzdFBhcmFtcyA9IHsgXG4gIHBhY2thZ2VJZDogc3RyaW5nO1xuICBhZG1pbkNhcElkOiBzdHJpbmc7XG4gIHZvdGVSZXF1ZXN0OiBzdHJpbmc7IFxuICBzaWduZXJQaHJhc2U6IHN0cmluZztcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbmRSZXF1ZXN0Vm90aW5nKHsgdm90ZVJlcXVlc3QsIHBhY2thZ2VJZCwgc2lnbmVyUGhyYXNlLCBhZG1pbkNhcElkIH06IEVuZFZvdGVSZXF1ZXN0UGFyYW1zKSB7XG4gIGNvbnN0IHsgc2lnbmVyIH0gPSBnZXRTaWduZXIoc2lnbmVyUGhyYXNlKTtcbiAgY29uc3QgdHggPSBuZXcgVHJhbnNhY3Rpb25CbG9jaygpO1xuXG4gIHR4Lm1vdmVDYWxsKHtcbiAgICB0YXJnZXQ6IGAke3BhY2thZ2VJZH06OmRhbzo6ZW5kX3JlcXVlc3Rfdm90aW5nYCxcbiAgICBhcmd1bWVudHM6IFt0eC5vYmplY3QoYWRtaW5DYXBJZCksIHR4Lm9iamVjdCh2b3RlUmVxdWVzdCldLFxuICB9KTtcblxuICB0cnkge1xuICAgIGNvbnN0IHR4UmVzID0gYXdhaXQgc2lnbmVyLnNpZ25BbmRFeGVjdXRlVHJhbnNhY3Rpb25CbG9jayh7XG4gICAgICB0cmFuc2FjdGlvbkJsb2NrOiB0eCxcbiAgICAgIHJlcXVlc3RUeXBlOiBcIldhaXRGb3JMb2NhbEV4ZWN1dGlvblwiLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBzaG93RWZmZWN0czogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gZ2V0RXhlY3V0aW9uU3RhdHVzKHR4UmVzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIGNvbnNvbGUuZXJyb3IoXCJDb3VsZCBub3QgZW5kIHZvdGluZyByZXF1ZXN0XCIsIGUpO1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBlbmQgdm90aW5nIHJlcXVlc3RcIik7XG4gIH1cbn1cblxuIl19