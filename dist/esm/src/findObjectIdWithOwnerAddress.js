import { getCreatedObjects } from "@mysten/sui.js";
export function findObjectIdWithOwnerAddress(txRes, address) {
    const objects = getCreatedObjects(txRes);
    if (!objects)
        throw new Error("Failed to mint artwork shard");
    const objectWithOwnerAddress = objects.find((obj) => {
        if (typeof obj.owner === 'string')
            return false;
        if ('AddressOwner' in obj.owner) {
            return obj.owner.AddressOwner === address;
        }
        else {
            return false;
        }
    });
    if (!objectWithOwnerAddress)
        throw new Error(`Failed to find object with owner address ${address} in objects: ${JSON.stringify(objects, null, 2)}`);
    const objectId = objectWithOwnerAddress.reference.objectId;
    return objectId;
}
export function findObjectIdInOwnedObjectList(list, objectId) {
    let object = undefined;
    list.data.find((obj) => {
        if (obj.data.objectId === objectId) {
            object = obj;
            return true;
        }
        return false;
    });
    if (object === undefined)
        return false;
    return object;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZE9iamVjdElkV2l0aE93bmVyQWRkcmVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maW5kT2JqZWN0SWRXaXRoT3duZXJBZGRyZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBK0IsTUFBTSxnQkFBZ0IsQ0FBQztBQWtCaEYsTUFBTSxVQUFVLDRCQUE0QixDQUFDLEtBQWtDLEVBQUUsT0FBZTtJQUM5RixNQUFNLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QyxJQUFJLENBQUMsT0FBTztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztJQUM5RCxNQUFNLHNCQUFzQixHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtRQUNsRCxJQUFJLE9BQU8sR0FBRyxDQUFDLEtBQUssS0FBSyxRQUFRO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDaEQsSUFBSSxjQUFjLElBQUksR0FBRyxDQUFDLEtBQUssRUFBRTtZQUMvQixPQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsWUFBWSxLQUFLLE9BQU8sQ0FBQztTQUMzQzthQUFNO1lBQ0wsT0FBTyxLQUFLLENBQUM7U0FDZDtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxDQUFDLHNCQUFzQjtRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLE9BQU8sZ0JBQWdCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDcEosTUFBTSxRQUFRLEdBQUcsc0JBQXNCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztJQUMzRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDO0FBRUQsTUFBTSxVQUFVLDZCQUE2QixDQUFDLElBQXFCLEVBQUUsUUFBZ0I7SUFDbkYsSUFBSSxNQUFNLEdBQWtCLFNBQVMsQ0FBQztJQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFO1FBQzFCLElBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxFQUFFO1lBQ2pDLE1BQU0sR0FBRyxHQUFHLENBQUM7WUFDYixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDLENBQUMsQ0FBQztJQUNILElBQUksTUFBTSxLQUFLLFNBQVM7UUFBRSxPQUFPLEtBQUssQ0FBQTtJQUN0QyxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q3JlYXRlZE9iamVjdHMsIFN1aVRyYW5zYWN0aW9uQmxvY2tSZXNwb25zZSB9IGZyb20gXCJAbXlzdGVuL3N1aS5qc1wiO1xuXG5leHBvcnQgdHlwZSBPd25lZE9iamVjdExpc3QgPSB7XG4gIGRhdGE6IERhdW1bXVxuICBuZXh0Q3Vyc29yOiBzdHJpbmdcbiAgaGFzTmV4dFBhZ2U6IGJvb2xlYW5cbn1cblxuZXhwb3J0IHR5cGUgRGF1bSA9IHtcbiAgZGF0YTogRGF0YVxufVxuXG5leHBvcnQgdHlwZSBEYXRhID0ge1xuICBvYmplY3RJZDogc3RyaW5nXG4gIHZlcnNpb246IHN0cmluZ1xuICBkaWdlc3Q6IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZE9iamVjdElkV2l0aE93bmVyQWRkcmVzcyh0eFJlczogU3VpVHJhbnNhY3Rpb25CbG9ja1Jlc3BvbnNlLCBhZGRyZXNzOiBzdHJpbmcpIHtcbiAgY29uc3Qgb2JqZWN0cyA9IGdldENyZWF0ZWRPYmplY3RzKHR4UmVzKTtcbiAgaWYgKCFvYmplY3RzKSB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gbWludCBhcnR3b3JrIHNoYXJkXCIpO1xuICBjb25zdCBvYmplY3RXaXRoT3duZXJBZGRyZXNzID0gb2JqZWN0cy5maW5kKChvYmopID0+IHtcbiAgICBpZiAodHlwZW9mIG9iai5vd25lciA9PT0gJ3N0cmluZycpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoJ0FkZHJlc3NPd25lcicgaW4gb2JqLm93bmVyKSB7XG4gICAgICByZXR1cm4gb2JqLm93bmVyLkFkZHJlc3NPd25lciA9PT0gYWRkcmVzcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSk7XG4gIGlmICghb2JqZWN0V2l0aE93bmVyQWRkcmVzcykgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmluZCBvYmplY3Qgd2l0aCBvd25lciBhZGRyZXNzICR7YWRkcmVzc30gaW4gb2JqZWN0czogJHtKU09OLnN0cmluZ2lmeShvYmplY3RzLCBudWxsLCAyKX1gKTtcbiAgY29uc3Qgb2JqZWN0SWQgPSBvYmplY3RXaXRoT3duZXJBZGRyZXNzLnJlZmVyZW5jZS5vYmplY3RJZDtcbiAgcmV0dXJuIG9iamVjdElkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZE9iamVjdElkSW5Pd25lZE9iamVjdExpc3QobGlzdDogT3duZWRPYmplY3RMaXN0LCBvYmplY3RJZDogc3RyaW5nKTogRGF1bSB8IGZhbHNlIHtcbiAgbGV0IG9iamVjdDpEYXVtfHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgbGlzdC5kYXRhLmZpbmQoKG9iajpEYXVtKSA9PiB7XG4gICAgaWYob2JqLmRhdGEub2JqZWN0SWQgPT09IG9iamVjdElkKSB7XG4gICAgICBvYmplY3QgPSBvYmo7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcbiAgaWYgKG9iamVjdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIG9iamVjdDtcbn0iXX0=